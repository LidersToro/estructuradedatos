nodo.h
#pragma una vez
#include <iostream>
#include <stdlib.h>
usando namespace std;
nodo de clase
{
público:
  int dato;
  nombre de cadena;
  nodo * sig;
};
pila.h
#pragma una vez
#include <iostream>
#include <stdlib.h>
#include "nodo.h"
usando namespace std;
clase pila
{
  nodo * inicio;
público:
  pila () {
    inicio = NULL;
  }
  void push ();
  void pop ();
  void show ();
  void top ();
  tamaño de vacío ();
};

pila.cpp
#include "StdAfx.h"
#include "pila.h"
#include <iostream>
#include <stdlib.h>
#include "nodo.h"
#include "cadena"
usando namespace std;


void pila :: push () {
  int valor;
  cadena valor2;
  nodo * aux = nuevo nodo;
       // ubicando espacio de memoria para crear una instancia del nodo: operador nuevo (nodo)
      // y construye un objeto en el nuevo espacio ubicado
  sistema ("cls");
  cout << "Ingresa el id del proceso:";
  cin >> valor;
  cout << "Ingresa el nombre del proceso:";
  cin.ignore ();
  getline (cin, valor2);
  aux-> dato = valor;
  aux-> nombre = valor2;
  aux-> sig = NULL;
       // Accede al elemento dato de nodo y le asigna valor.
  if (inicio! = NULL)
    aux-> sig = inicio;
  inicio = aux;
  cout << "Nuevo proceso insertado en la pila! \ n";
  sistema ("pausa");
}

void pila :: pop () {
  nodo * temp = nuevo nodo;
  if (inicio == NULL) {
    sistema ("cls");
    cout << "\ nLa pila esta vacia! \ n \ n";
    sistema ("pausa");
  } else {
    temp = inicio;
    inicio = inicio-> sig;
    sistema ("cls");
    cout << "\ nEl proceso elimina es:" << temp-> dato << "-" << temp-> nombre << "\ n" << endl;
    eliminar temperatura;
    sistema ("pausa");
  }
}

void pila :: show () {
  nodo * aux1 = inicio;
  if (inicio == NULL) {
    sistema ("cls");
    cout << "\ nLa pila esta vacia! \ n \ n";
    sistema ("pausa");
  } else {
    sistema ("cls");
    cout << "Procesos: \ n" << endl;
    while (aux1! = NULL) {
      cout << aux1-> dato << "-" << aux1-> nombre << "\ n" << endl;
      aux1 = aux1-> sig;
    }
    sistema ("pausa");
  }
}

void pila :: top () {
  nodo * aux1 = inicio;
  if (inicio == NULL) {
    sistema ("cls");
    cout << "\ nLa pila esta vacia! \ n \ n";
    sistema ("pausa");
  } else {
    sistema ("cls");
    cout << "Proceso TOP: \ n" << endl;
    cout << aux1-> dato << "-" << aux1-> nombre << "\ n" << endl;
    sistema ("pausa");
  }
}

void pila :: size () {
  nodo * aux1 = inicio;
  if (inicio == NULL) {
    sistema ("cls");
    cout << "\ nLa pila esta vacia! \ n \ n";
    sistema ("pausa");
  } else {
    int contador = 0;
    while (aux1) {
      contador ++;
      aux1 = aux1-> sig;
    }
    sistema ("cls");
    cout << "El tamano de la pila es: '" << contador << "' \ n" << endl;
    sistema ("pausa");
  }
}
Main.cpp
#include "StdAfx.h"
#include "pila.h"
#include <iostream>
#include <stdlib.h>
#include "nodo.h"
#include "cadena"
usando namespace std;

int main () {
  nodo nuevo;
  pila l;
  int opcion;
  hacer {
    sistema ("cls");
    cout << "[:] Pila en lista enlazada" << endl;
    cout << "[1] Presione" << endl;
    cout << "[2] Pop" << endl;
    cout << "[3] Mostrar" << endl;
    cout << "[4] Arriba" << endl;
    cout << "[5] Tamaño" << endl;
    cout << "[0] Salir" << endl;
    cout << "\ nIngresa tu opcion:";
    cin >> opcion;
    cambiar (opcion) {
    caso 1:
      l.push ();
      descanso;
    caso 2:
      l.pop ();
      descanso;
    Caso 3:
      l.show ();
      descanso;
    caso 4:
      l.top ();
      descanso;
    caso 5:
      l.size ();
      descanso;
    caso 0:
      return 0;
      descanso;
    defecto:
      cout << "Por favor ingresa a una opcion correcta. \ n";
      descanso;
    }
  } while (opcion! = 0);
  return 0;
}
