// Nodo.h
#pragma una vez
#include "Dato.h"
clase Nodo {public: 
    Dato dato; 
    Nodo * puntero; 
     
    Nodo () {// Constructor de la clase
        puntero = NULL; 
    }
	void Encolar (Nodo * & inicio, Nodo * & fin);
	void Desencolar (Nodo * y inicio);
}; 

//Dato.h
#pragma una vez
#include <cadena>
usando namespace std;
clase Dato {
público: 
    doble Codigo; 
    cadena Nombre; 
    cadena Carrera; 
    Dato () { 
        Codigo = 0; 
        Nombre = "Desconocido"; 
        Carrera = "Desconocido"; 
    }
}; 
//Principal
#include "stdafx.h"
#include <iostream> 
#include "Nodo.h" // Se incluye a la clase Nodo

usando namespace std; 

void Encolar (Nodo * & inicio, Nodo * & fin);
void Desencolar (Nodo * y inicio);

int main () { 
    Nodo * inicio = NULL, * fin = NULL; // Punteros libres para el manejo de la cola
    int opc = 0, respuesta = 0; 
    hacer{ 
        cout << "1. LA COLA ESTA VACIA?" << endl; 
        cout << "2. ENCOLAR" << endl; 
        cout << "3. DESENCOLAR" << endl; 
        cout << "4. FINALIZAR" << endl; 
        cout << "Opcion:"; cin >> opc;
         
         
        switch (opc) { 
        caso 1 : 
            if (inicio == NULL) 
                cout << "La cola se encuentra vacia" << endl; 
            más 
                cout << "Existe elemento (s) dentro de la cola" << endl; 
            descanso; 
        caso 2: 
            Encolar (inicio, fin); 
            descanso; 
        Caso 3: 
            Desencolar (inicio); 
            descanso ; 
             
        } 
         
    } while (opc! = 4); 
     
     
    return 0; }

void Encolar (Nodo * & inicio, Nodo * & fin) {// Punteros enviados por referencia      
    Nodo * Elemento = nuevo Nodo; // Creacion del nodo      
    if (inicio == NULL) { 
         
        inicio = fin = Elemento; // Le asigno la direccion del primer nodo          
        cout << "Codigo:"; cin >> Elemento-> dato.Codigo;
        cout << "Nombres:"; cin >> Elemento-> dato.Nombre;
        cout << "Carrera:"; cin >> Elemento-> dato.Carrera;
         
         
    }más{ 
         
        fin-> puntero = Elemento; // Asigno el puntero del elemento anterior al nuevo

        fin = Elemento; // Cambio la dirección del ultimo nodo creado

        cout << "Codigo:"; cin >> Elemento-> dato.Codigo;
        cout << "Nombres:"; cin >> Elemento-> dato.Nombre;
        cout << "Carrera:"; cin >> Elemento-> dato.Carrera; cout << endl;
         
    } 
     
     } 

void Desencolar (Nodo * & inicio) { 
    if (inicio! = NULL) { 
        cout << "Codigo:" << inicio-> dato.Codigo << endl; 
        cout << "Nombres:" << inicio-> dato.Nombre << endl; 
        cout << "Carrera:" << inicio-> dato.Carrera << endl; 
        inicio = inicio-> puntero; // Cambio Inicio al siguiente nodo
    }más{ 
        cout << "La cola se encuentra vacia" << endl; 
    }} 
